{
  "_args": [
    [
      {
        "raw": "pre-push@^0.1.1",
        "scope": null,
        "escapedName": "pre-push",
        "name": "pre-push",
        "rawSpec": "^0.1.1",
        "spec": ">=0.1.1 <0.2.0",
        "type": "range"
      },
      "/GitSourcetree/l2lc-fe/app"
    ]
  ],
  "_from": "pre-push@>=0.1.1 <0.2.0",
  "_id": "pre-push@0.1.1",
  "_inCache": true,
  "_location": "/pre-push",
  "_nodeVersion": "0.10.35",
  "_npmUser": {
    "name": "dflourusso",
    "email": "dflourusso@gmail.com"
  },
  "_npmVersion": "2.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pre-push@^0.1.1",
    "scope": null,
    "escapedName": "pre-push",
    "name": "pre-push",
    "rawSpec": "^0.1.1",
    "spec": ">=0.1.1 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/pre-push/-/pre-push-0.1.1.tgz",
  "_shasum": "2a2a79827d243a76c91089897ac707f45e716aac",
  "_shrinkwrap": null,
  "_spec": "pre-push@^0.1.1",
  "_where": "/GitSourcetree/l2lc-fe/app",
  "author": {
    "name": "dflourusso"
  },
  "bugs": {
    "url": "https://github.com/dflourusso/pre-push/issues"
  },
  "dependencies": {
    "shelljs": "0.3.x"
  },
  "description": "Automatically install pre-push hooks for your npm modules.",
  "devDependencies": {
    "assume": "1.1.x",
    "istanbul": "0.3.x",
    "mocha": "2.1.x",
    "pre-push": "git://github.com/dflourusso/pre-push.git"
  },
  "directories": {},
  "dist": {
    "shasum": "2a2a79827d243a76c91089897ac707f45e716aac",
    "tarball": "https://registry.npmjs.org/pre-push/-/pre-push-0.1.1.tgz"
  },
  "gitHead": "074c5e269f7be50d531ef6b473d9cfd817dcab98",
  "homepage": "https://github.com/dflourusso/pre-push",
  "keywords": [
    "git",
    "hooks",
    "npm",
    "pre-push",
    "prepush",
    "run",
    "test",
    "development"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dflourusso",
      "email": "dflourusso@gmail.com"
    }
  ],
  "name": "pre-push",
  "optionalDependencies": {},
  "readme": "# pre-push\n\n[![Version npm][version]](http://browsenpm.org/package/pre-push)[![Build Status][build]](https://travis-ci.org/observing/pre-push)[![Dependencies][david]](https://david-dm.org/observing/pre-push)[![Coverage Status][cover]](https://coveralls.io/r/observing/pre-push?branch=master)\n\n[version]: http://img.shields.io/npm/v/pre-push.svg?style=flat-square\n[build]: http://img.shields.io/travis/observing/pre-push/master.svg?style=flat-square\n[david]: https://img.shields.io/david/observing/pre-push.svg?style=flat-square\n[cover]: http://img.shields.io/coveralls/observing/pre-push/master.svg?style=flat-square\n\n**pre-push** is a pre-push hook installer for `git`. It will ensure that\nyour `npm test` (or other specified scripts) passes before you can push your\nchanges. This all conveniently configured in your package.json.\n\nBut don't worry, you can still force a push by telling `git` to skip the\n`pre-push` hooks by simply pushting using `--no-verify`.\n\n### Installation\n\nIt's advised to install the **pre-push** module as a `devDependencies` in your\n`package.json` as you only need this for development purposes. To install the\nmodule simply run:\n\n```\nnpm install --save-dev pre-push\n```\n\nTo install it as `devDependency`. When this module is installed it will override\nthe existing `pre-push` file in your `.git/hooks` folder. Existing\n`pre-push` hooks will be backed up as `pre-push.old` in the same repository.\n\n### Configuration\n\n`pre-push` will try to run your `npm test` command in the root of the git\nrepository by default unless it's the default value that is set by the `npm\ninit` script. \n\nBut `pre-push` is not limited to just running your `npm test`'s during the\npush hook. It's also capable of running every other script that you've\nspecified in your `package.json` \"scripts\" field. So before people push you\ncould ensure that:\n\n- You have 100% coverage\n- All stying passes.\n- JSHint passes.\n- Contribution licenses signed etc.\n\nThe only thing you need to do is add a `pre-push` array to your `package.json`\nthat specifies which scripts you want to have ran and in which order:\n\n```js\n{\n  \"name\": \"437464d0899504fb6b7b\",\n  \"version\": \"0.0.0\",\n  \"description\": \"ERROR: No README.md file found!\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: I SHOULD FAIL LOLOLOLOLOL \\\" && exit 1\",\n    \"foo\": \"echo \\\"fooo\\\" && exit 0\",\n    \"bar\": \"echo \\\"bar\\\" && exit 0\"\n  },\n  \"pre-push\": [\n    \"foo\",\n    \"bar\",\n    \"test\"\n  ]\n}\n```\n\nIn the example above, it will first run: `npm run foo` then `npm run bar` and\nfinally `npm run test` which will make the push fail as it returns the error\ncode `1`.  If you prefer strings over arrays or `prepush` without a middle\ndash, that also works:\n\n```js\n{\n  \"prepush\": \"foo, bar, test\"\n  \"pre-push\": \"foo, bar, test\"\n  \"pre-push\": [\"foo\", \"bar\", \"test\"]\n  \"prepush\": [\"foo\", \"bar\", \"test\"],\n  \"prepush\": {\n    \"run\": \"foo, bar, test\",\n  },\n  \"pre-push\": {\n    \"run\": [\"foo\", \"bar\", \"test\"],\n  },\n  \"prepush\": {\n    \"run\": [\"foo\", \"bar\", \"test\"],\n  },\n  \"pre-push\": {\n    \"run\": \"foo, bar, test\",\n  }\n}\n```\n\nThe examples above are all the same. In addition to configuring which scripts\nshould be ran you can also configure the following options:\n\n- **silent** Don't output the prefixed `pre-push:` messages when things fail\n  or when we have nothing to run. Should a boolean.\n- **colors** Don't output colors when we write messages. Should be a boolean.\n- **template** Path to a file who's content should be used as template for the\n  git push body.\n\nThese options can either be added in the `pre-push`/`prepush` object as keys\nor as `\"pre-push.{key}` key properties in the `package.json`:\n\n```js\n{\n  \"prepush.silent\": true,\n  \"pre-push\": {\n    \"silent\": true\n  }\n}\n```\n\nIt's all the same. Different styles so use what matches your project. To learn\nmore about the scripts, please read the official `npm` documentation:\n\nhttps://npmjs.org/doc/scripts.html\n\nAnd to learn more about git hooks read:\n\nhttp://githooks.com\n\n### License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/dflourusso/pre-push.git"
  },
  "scripts": {
    "coverage": "istanbul cover ./node_modules/.bin/_mocha -- test.js",
    "example-fail": "echo \"This is the example hook, I exit with 1\" && exit 1",
    "example-pass": "echo \"This is the example hook, I exit with 0\" && exit 0",
    "install": "node install.js",
    "test": "mocha test.js",
    "test-travis": "istanbul cover node_modules/.bin/_mocha --report lcovonly -- test.js",
    "uninstall": "node uninstall.js"
  },
  "version": "0.1.1"
}
