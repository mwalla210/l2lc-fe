{
  "_args": [
    [
      {
        "raw": "react-element-to-jsx-string@^5.0.0",
        "scope": null,
        "escapedName": "react-element-to-jsx-string",
        "name": "react-element-to-jsx-string",
        "rawSpec": "^5.0.0",
        "spec": ">=5.0.0 <6.0.0",
        "type": "range"
      },
      "/GitSourcetree/l2lc-fe/app/node_modules/chai-enzyme"
    ]
  ],
  "_from": "react-element-to-jsx-string@>=5.0.0 <6.0.0",
  "_id": "react-element-to-jsx-string@5.0.7",
  "_inCache": true,
  "_location": "/react-element-to-jsx-string",
  "_nodeVersion": "7.3.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/react-element-to-jsx-string-5.0.7.tgz_1483437506554_0.5260775783099234"
  },
  "_npmUser": {
    "name": "vvo",
    "email": "vincent.voyer@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-element-to-jsx-string@^5.0.0",
    "scope": null,
    "escapedName": "react-element-to-jsx-string",
    "name": "react-element-to-jsx-string",
    "rawSpec": "^5.0.0",
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/chai-enzyme"
  ],
  "_resolved": "https://registry.npmjs.org/react-element-to-jsx-string/-/react-element-to-jsx-string-5.0.7.tgz",
  "_shasum": "c663a4800a9c712115c0d8519cb0215a46a1f0f2",
  "_shrinkwrap": null,
  "_spec": "react-element-to-jsx-string@^5.0.0",
  "_where": "/GitSourcetree/l2lc-fe/app/node_modules/chai-enzyme",
  "author": {
    "name": "Algolia, Inc.",
    "url": "https://github.com/algolia"
  },
  "bugs": {
    "url": "https://github.com/algolia/react-element-to-jsx-string/issues"
  },
  "dependencies": {
    "collapse-white-space": "^1.0.0",
    "is-plain-object": "^2.0.1",
    "lodash": "^4.17.4",
    "sortobject": "^1.0.0",
    "stringify-object": "2.4.0",
    "traverse": "^0.6.6"
  },
  "description": "Turn a ReactElement into the corresponding JSX string.",
  "devDependencies": {
    "babel-cli": "^6.18.0",
    "babel-eslint": "^7.1.1",
    "babel-plugin-lodash": "^3.2.11",
    "babel-preset-es2015": "^6.18.0",
    "babel-preset-react": "^6.16.0",
    "babel-preset-stage-2": "^6.18.0",
    "babel-register": "^6.18.0",
    "eslint": "^3.12.2",
    "eslint-config-algolia": "^6.0.1",
    "eslint-import-resolver-webpack": "^0.8.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jasmine": "^2.2.0",
    "eslint-plugin-react": "^6.8.0",
    "expect": "^1.14.0",
    "mocha": "^3.2.0",
    "react": "^15.4.1",
    "react-addons-test-utils": "^15.4.1",
    "react-dom": "^15.4.1",
    "webpack": "^1.14.0"
  },
  "directories": {},
  "dist": {
    "shasum": "c663a4800a9c712115c0d8519cb0215a46a1f0f2",
    "tarball": "https://registry.npmjs.org/react-element-to-jsx-string/-/react-element-to-jsx-string-5.0.7.tgz"
  },
  "gitHead": "1bbf36c98f45ea50409efde9532419d72ab5f534",
  "homepage": "https://github.com/algolia/react-element-to-jsx-string#readme",
  "license": "MIT",
  "main": "index-dist.js",
  "maintainers": [
    {
      "name": "beauroberts",
      "email": "beau@shotgunsoftware.com"
    },
    {
      "name": "morhaus",
      "email": "a.kirszenberg@gmail.com"
    },
    {
      "name": "redox",
      "email": "sylvain.utard@gmail.com"
    },
    {
      "name": "vvo",
      "email": "vincent.voyer@gmail.com"
    }
  ],
  "name": "react-element-to-jsx-string",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.8 || ^15.0.1"
  },
  "readme": "# react-element-to-jsx-string\n\n[![Version][version-svg]][package-url] [![Build Status][travis-svg]][travis-url] [![License][license-image]][license-url] [![Downloads][downloads-image]][downloads-url]\n\n[travis-svg]: https://img.shields.io/travis/algolia/react-element-to-jsx-string/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/algolia/react-element-to-jsx-string\n[license-image]: http://img.shields.io/badge/license-MIT-green.svg?style=flat-square\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/react-element-to-jsx-string.svg?style=flat-square\n[downloads-url]: http://npm-stat.com/charts.html?package=react-element-to-jsx-string\n[version-svg]: https://img.shields.io/npm/v/react-element-to-jsx-string.svg?style=flat-square\n[package-url]: https://npmjs.org/package/react-element-to-jsx-string\n\nTurn a ReactElement into the corresponding JSX string.\n\nUseful for unit testing and any other need you may think of.\n\nFeatures:\n- supports nesting and deep nesting like `<div a={{b: {c: {d: <div />}}}} />`\n- props: supports string, number, function (inlined as `prop={function noRefCheck() {}}`), object, ReactElement (inlined), regex, booleans (with or without [shorthand syntax](https://facebook.github.io/react/docs/jsx-in-depth.html#boolean-attributes)), ...\n- order props alphabetically\n- sort object keys in a deterministic order (`o={{a: 1, b:2}} === o={{b:2, a:1}}`)\n- handle `ref` and `key` attributes, they are always on top of props\n- React's documentation indent style for JSX\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**  *generated with [DocToc](https://github.com/thlorenz/doctoc)*\n\n- [react-element-to-jsx-string](#react-element-to-jsx-string)\n  - [Setup](#setup)\n  - [Usage](#usage)\n  - [Test](#test)\n  - [Build](#build)\n  - [Thanks](#thanks)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Setup\n\n```sh\nnpm install react-element-to-jsx-string --save[-dev]\n```\n\n## Usage\n\n```js\nimport React from 'react';\nimport reactElementToJSXString from 'react-element-to-jsx-string';\n\nconsole.log(reactElementToJSXString(<div a=\"1\" b=\"2\">Hello, world!</div>));\n// <div\n//   a=\"1\"\n//   b=\"2\"\n// >\n//   Hello, world!\n// </div>\n```\n\n## API\n\n### reactElementToJSXString(ReactElement[, options])\n\n**options.displayName: function(ReactElement)**\n\n  Provide a different algorithm in charge of finding the right display name (name of the underlying Class) for your element.\n\n  Just return the name you want for the provided ReactElement, as a string.\n\n**options.filterProps: array, default []**\n\n  Provide an array of props to filter for every component. For example ['key'] will suppress the key=\"\" prop from being added.\n\n**options.showDefaultProps: boolean, default true**\n\n  If true, default props shown.\n\n  If false, default props are omitted unless they differ from from the default value.\n\n**options.showFunctions: boolean, default false**\n\n  If true, functions bodies are shown.\n\n  If false, functions bodies are replaced with `function noRefCheck() {}`.\n\n**options.tabStop: number, default 2**\n\n  Provide a different number of columns for indentation.\n\n**options.useBooleanShorthandSyntax: boolean, default true**\n\n  If true, Boolean prop values will be omitted for [shorthand syntax](https://facebook.github.io/react/docs/jsx-in-depth.html#boolean-attributes).\n\n  If false, Boolean prop values will be explicitly output like `prop={true}` and `prop={false}`\n\n## Test\n\n```sh\nnpm test\nnpm run test:watch\n```\n\n## Build\n\n```sh\nnpm run build\nnpm run build:watch\n```\n\n## Release\n\nDecide if this is a `patch`, `minor` or `major` release, look at http://semver.org/\n\n```sh\nyarn release [major|minor|patch|x.x.x]\n```\n\n## Thanks\n\n[alexlande/react-to-jsx](https://github.com/alexlande/react-to-jsx/) was a good source of inspiration.\n\nWe built our own module because we had some needs like ordering props in alphabetical order.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/algolia/react-element-to-jsx-string.git"
  },
  "scripts": {
    "build": "babel index.js -o index-dist.js",
    "build:watch": "babel index.js -o index-dist.js -w",
    "prepublish": "npm run build",
    "release": "./release.sh",
    "test": "mocha --opts mocha.opts && eslint .",
    "test:watch": "mocha --opts mocha.opts --watch --reporter min"
  },
  "version": "5.0.7"
}
