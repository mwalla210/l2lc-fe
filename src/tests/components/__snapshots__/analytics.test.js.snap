// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Analytics Renders (loading) 1`] = `
<div
  className="row justify-content-center"
>
  <div
    className="col-12"
    style={
      Object {
        "display": "inline-block",
        "paddingTop": 10,
      }
    }
  >
    <h4
      style={
        Object {
          "textAlign": "center",
        }
      }
    />
    <div
      className="row justify-content-center"
      style={
        Object {
          "paddingBottom": "30px",
          "paddingTop": "30px",
        }
      }
    >
      <BarLoader
        color="#2baae2"
        height={8}
        loading={true}
        width={200}
      />
    </div>
  </div>
</div>
`;

exports[`Analytics Renders (non-loading bar with filters) 1`] = `
<div
  className="row justify-content-center"
>
  <div
    className="col-12"
    style={
      Object {
        "display": "inline-block",
        "paddingTop": 10,
      }
    }
  >
    <h4
      style={
        Object {
          "textAlign": "center",
        }
      }
    />
    <div>
      <div
        className="row justify-content-center"
      >
        <ButtonGroup>
          <Button
            active={false}
            color="primary"
            onClick={[Function]}
            size="sm"
          >
            type
          </Button>
          <Button
            active={false}
            color="primary"
            onClick={[Function]}
            size="sm"
          >
            type
          </Button>
        </ButtonGroup>
      </div>
      <div
        className="row justify-content-center"
      >
        <ButtonGroup>
          <Button
            active={true}
            color="secondary"
            onClick={[Function]}
            size="sm"
          >
            Year
          </Button>
          <Button
            active={false}
            color="secondary"
            onClick={[Function]}
            size="sm"
          >
            3 Months
          </Button>
          <Button
            active={false}
            color="secondary"
            onClick={[Function]}
            size="sm"
          >
            1 Month
          </Button>
          <Button
            active={false}
            color="secondary"
            onClick={[Function]}
            size="sm"
          >
            1 Week
          </Button>
        </ButtonGroup>
      </div>
      <Bar
        data={Array []}
        height={60}
        options={
          Object {
            "legend": Object {
              "display": false,
            },
            "responsive": true,
            "scales": Object {
              "xAxes": Array [
                Object {
                  "display": true,
                  "ticks": Object {
                    "autoSkip": false,
                  },
                },
              ],
              "yAxes": Array [
                Object {
                  "display": true,
                  "scaleLabel": Object {
                    "display": true,
                    "labelString": "yLabel",
                  },
                  "ticks": Object {
                    "beginAtZero": true,
                  },
                },
              ],
            },
          }
        }
        width={100}
      />
    </div>
  </div>
</div>
`;

exports[`Analytics Renders (non-loading pie) 1`] = `
<div
  className="row justify-content-center"
>
  <div
    className="col-6"
    style={
      Object {
        "display": "inline-block",
        "paddingTop": 10,
      }
    }
  >
    <h4
      style={
        Object {
          "textAlign": "center",
        }
      }
    />
    <div>
      <div
        className="row justify-content-center"
      >
        <ButtonGroup>
          <Button
            active={true}
            color="secondary"
            onClick={[Function]}
            size="sm"
          >
            Year
          </Button>
          <Button
            active={false}
            color="secondary"
            onClick={[Function]}
            size="sm"
          >
            3 Months
          </Button>
          <Button
            active={false}
            color="secondary"
            onClick={[Function]}
            size="sm"
          >
            1 Month
          </Button>
          <Button
            active={false}
            color="secondary"
            onClick={[Function]}
            size="sm"
          >
            1 Week
          </Button>
        </ButtonGroup>
      </div>
      <Pie
        data={Array []}
        options={
          Object {
            "legend": Object {
              "display": false,
            },
          }
        }
      />
    </div>
  </div>
</div>
`;
